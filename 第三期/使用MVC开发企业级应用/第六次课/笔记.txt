复杂类型模型绑定：
1.模型包含模型
动作方法参数名.属性.属性	或	属性.属性
2.模型集合
动作方法参数名[序号].属性
3.模型包含集合
动作方法参数.属性[序号].属性	或	属性[序号].属性

定制模型绑定：
1.在动作方法参数上应用Bind特性
[Bind(Include="UserName,Password,......")]User user
[Bind(Exclude="Email")]User user
[Bind(prefix="b")]User user
2.在模型类上应用绑定特性
同上
3.在动作方法中使用控制器方法UpdateModel(),TryUpdateModel()

自定义模型绑定器
用于从其他数据源(Session,Cookie等)为实体对象属性映射值，需要实现IModelBinder接口，然后在要实现的接口NindModel()中定义自定义绑定规则

分解模型：
原因：为了让业务更加稳定和专注
视图模型：主要专注于View的显示以及数据的映射
特征：1.定义为Partial类		2.有定义一个元数据内部类(主要用于验证)
3.提那家新的属性	4.应用MetaDataType特性
业务模型：主要专注于数据库表之间的提取与保持
特征：定义为Partial类

扩展方法：
用于在不改变已有类型代码的基础上，为类型新增功能
规则：
1.扩展方法所在类为静态类
2.扩展方法为静态方法
3.扩展方法的第一个参数指明其实为哪个类型扩展的
语法：
public static class 类名
{
	public static 返回值类型 方法名称(this 类型 对象名,[其他参数类别])
	{
		//扩展方法代码
	}
}

Pager