对象数组中进行数组元素的新增、修改、删除和查询的程序结构

	新增
		//设置可操作的对象数组元素下标，-1不可操作
		int index = -1;

		for(int i = 0; i < 数组长度(数组名.length); i++){
			//判断数组元素是否为空
			if(数组名[i] == null){
				//记录数组下标
				index = i;

				//结束操作
				break;
			}
		}

		//判断数组元素是否可以操作
		if(index != -1){
			//创建信息类对象
			信息类名 信息类对象名 = new 信息类名();

			//新增操作

			//放入数组元素
			数组名[index] = 信息类对象名;
		}else{
			//数组元素已满，无法新增
		}

	修改
		//设置可操作的对象数组元素下标，-1不可操作
		int index = -1;

		for(int i = 0; i < 数组长度(数组名.length); i++){
			//判断数组元素是否存在
			if(数组名[i] != null && 数组名[i].属性名 == 需要修改的值){
				//记录数组下标
				index = i;
				
				//结束操作
				break;
			}
		}

		//判断数组元素是否可以操作
		if(index != -1){
			//修改操作
			数组名[index].属性名1 = 值1;
			数组名[index].属性名2 = 值2;

		}else{
			//数组元素未找到
		}

	删除
		//设置可操作的对象数组元素下标，-1不可操作
		int index = -1;

		for(int i = 0; i < 数组长度(数组名.length); i++){
			//判断数组元素是否存在
			if(数组名[i] != null && 数组名[i].属性名 == 需要删除的值){
				//记录数组下标
				index = i;

				//结束操作
				break;
			}
		}

		//判断数组元素是否可以操作
		if(index != -1){
			//删除操作
			数组名[index] = null;
		}else{
			//数组元素未找到
		}

	查询
		//输出表头

		for(int i = 0; i < 数组长度(数组名.length); i++){
			//判断数组元素是否存在
			if(数组名[i] != null){
				//输出对应信息
			}
		}







