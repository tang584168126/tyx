.NET程序框架的关系
	.NET：平台

	.NET Framework：.NET框架，.NET平台的核心

	C#：编程语言

	Visual Studio：编写工具

.NET程序的结构
	解决方案(.sln)
		项目1(.csproj)
			程序文件(.cs)
			程序文件(.cs)

		项目2(.csproj)
			程序文件(.cs)
			程序文件(.cs)

		项目n(.csproj)
			程序文件(.cs)
			程序文件(.cs)

C#程序
	1.组成
		1)命名空间：namespace

		2)引用命名空间：using 命名空间;

		3)类：class

		4)Main函数

	2.语法
		2.1 变量
			值数据类型
				int：整型
				float：单精度浮点型
				double：双精度浮点型
				char：字符
				bool：布尔型

			引用数据类型
				string：字符串
				数组：数据类型[] 数组名 = new 数据类型[长度];

		2.2 常量
			语法
				const 数据类型 常量名称 = 值;

			注意事项
				1)常量无法修改，声明时需要赋值

				2)常量命名全部使用大写字母并且有意义

		2.3 输入与输出
			输出
				Console.WriteLine(输出内容)：输出后自动换行

				Console.Write(输出内容)：输出后不换行

			输入
				变量名 = Console.ReadLine();

				注意：
					1.只接收字符串的输入

					2.其他数据类型必须进行数据类型转换
						整数：int.Parse(Console.ReadLine());
						小数：double.Parse(Console.ReadLine());

		2.4 分支结构
			2.4.1 基本if选择结构
				语法：
					if(选择条件)
					{
						//代码块
					}

			2.4.2 if-else选择结构
				语法：
					if(选择条件)
					{
						//代码块1
					}
					else
					{
						//代码块2
					}

			2.4.3 多重if选择结构
				语法：
					if(选择条件1)
					{
						//代码块1
					}
					else if(选择条件2)
					{
						//代码块2
					}
					else
					{
						//代码块3
					}

			2.4.4 嵌套if选择结构
				语法：
					if(选择条件1)
					{
						if(选择条件2)
						{
							//代码块1
						}
						else
						{
							//代码块2
						}
					}
					else
					{
						//代码块3
					}

			2.4.5 switch选择结构
				语法：
					switch(表达式)
					{
						case 常量1:
							break;
						case 常量2:
							break;
						...
						case 常量n:
							break;
						default:
							break;
					}

				注意事项：
					1)表达式数据类型为int、char、string
					2)case常量部分若有代码块，break关键字不准省略；case常量部分若无代码块，break关键字可以省略,代表是同一种操作

		2.5 循环结构
			2.5.1 while循环结构
				语法
					while(循环条件)
					{
						//循环操作
					}

				特点
					先判断，后执行

				使用场合
					任意场合

			2.5.2 do-while循环结构
				语法
					do
					{
						//循环操作
					}while(循环条件);

				特点
					先执行，后判断

				使用场合
					至少需要执行一次循环操作时

			2.5.3 for循环结构
				语法
					for(表达式一/循环变量初始化;表达式二/循环条件;表达式三/循环变量改变)
					{
						//循环操作
					}

				特点
					先判断，后执行

				使用场合
					循环次数固定

			2.5.4 foreach循环结构
				语法
					foreach(数据类型 临时变量 in 数组或集合)
					{
						循环操作
					}

				注意事项
					1.数据类型必须与数组(集合)数据类型一致
					2.临时变量的值不允许修改

				使用场合
					遍历数组或集合中的元素


		2.6 类和对象
			2.6.1 面向对象
				理念：模拟现实

				核心：类和对象

				目标：使用计算机创建新的世界

			2.6.2 类
				字段(成员变量)

				属性
					访问修饰符：
						public		=> 公共的，在类中或类的外部都可以访问
						protected	=> 受保护的，只有在类中或类的子类可以访问
						private		=> 私有的，只有在类中可以访问

					语法
						public 数据类型 属性名
						{
							get{return this.字段名;}
							set{this.字段名 = value;}
						}

						get：读取权限，可以获取属性值
						set：写入权限，可以设置属性值

					快捷键
						选中字段 => Ctrl + R + E => 确定


				方法
					类别：
						无参无返回值
						无参有返回值
						有参无返回值
						有参有返回值

					步骤：
						1)定义方法
							方法名称：首字母大写，有意义
							方法结果：返回值
							给出的资源：参数列表(定义变量)

						2)实现方法
							使用 面向过程 的方式实现需要的功能或操作

			2.6.3 对象
				1)创建类的对象
					类名 对象名 = new 类名();

				2)引用类的属性(字段)
					对象名.属性名(字段名);

				3)引用类的方法
					对象名.方法名();

			2.6.4 值传递和引用传递
					值传递：传递值的副本，方法中值的改变与原有值无关

					引用传递：传递的地址，方法中值的改变将影响原有值


		2.7 字符串类
			2.7.1 属性
				1.获取字符串的长度
					字符串名.Length：获取字符串长度，得到一个int类型的数字

			2.7.2 方法
				1.字符串的比较
					==：
					Equals：比较字符串的值是否相等，区分大小写

				2.字符串的大小写转换
					ToUpper()：全部转换为大写字母
					ToLower()：全部转换为小写字母

				3.字符串的连接
					+：连接任意数据类型
					Join()：将字符串数组的元素用某个字符连接在一起

				4.字符串的提取方法
					IndexOf()：获取某个字符在字符串中第一次出现的位置，若无无此字符，值为-1
					LastIndexOf()：获取某个字符在字符串中最后一次出现的位置，若无此字符，值为-1
					Substring()：截取字符串中的某一段
					Trim()：去掉字符串的前后空格

				5.字符串的拆分
					Split()：将字符串以某个字符进行拆分，用字符串数组进行接收，某个字符会被省略

				6.字符串格式化
					Format()：








